{"version":3,"file":"appointmentService.js","sources":["services/appointmentService.ts"],"sourceRoot":"/","sourcesContent":["import { Op } from 'sequelize';\r\nimport { Appointment, User, Service } from '../models';\r\n\r\ntype AppointmentStatus = 'pending' | 'confirmed' | 'finished' | 'cancelled';\r\nconst allowedStatuses: AppointmentStatus[] = ['pending', 'confirmed', 'finished', 'cancelled'];\r\n\r\nexport class AppointmentService {\r\n  async createAppointment(patientId: number, doctorId: number, serviceId: number, date: Date) {\r\n    return Appointment.create({\r\n      patientId,\r\n      doctorId,\r\n      serviceId,\r\n      date,\r\n      status: 'pending' as AppointmentStatus,  // Явне приведення типу\r\n    });\r\n  }\r\n\r\n  async updateAppointment(\r\n    id: number,\r\n    user: { id: number; role: string },\r\n    updates: { date?: Date; status?: string }\r\n  ) {\r\n    const appointment = await Appointment.findByPk(id, {\r\n      include: [\r\n        { model: User, as: 'doctor' },\r\n        { model: User, as: 'patient' }\r\n      ]\r\n    });\r\n\r\n    if (!appointment) {\r\n      throw new Error('NotFound');\r\n    }\r\n\r\n    if (user.role === 'admin') {\r\n      if (updates.date) appointment.date = updates.date;\r\n      if (updates.status && allowedStatuses.includes(updates.status as AppointmentStatus)) {\r\n        appointment.status = updates.status as AppointmentStatus;\r\n      }\r\n    } else if (user.role === 'doctor' && user.id === appointment.doctorId) {\r\n      if (updates.status && allowedStatuses.includes(updates.status as AppointmentStatus)) {\r\n        appointment.status = updates.status as AppointmentStatus;\r\n      } else if (updates.status) {\r\n        throw new Error('Forbidden');\r\n      }\r\n    } else if (user.role === 'patient' && user.id === appointment.patientId) {\r\n      if (updates.date) appointment.date = updates.date;\r\n    } else {\r\n      throw new Error('Forbidden');\r\n    }\r\n\r\n    await appointment.save();\r\n    return appointment;\r\n  }\r\n\r\n  async getAllAppointments(user: { id: number; role: string }) {\r\n    const where: any = {};\r\n    if (user.role === 'doctor') {\r\n      where.doctorId = user.id;\r\n    } else if (user.role === 'patient') {\r\n      where.patientId = user.id;\r\n    }\r\n\r\n    const appointments = await Appointment.findAll({\r\n      where,\r\n      include: [\r\n        { model: User, as: 'doctor', attributes: ['firstName', 'lastName'] },\r\n        { model: User, as: 'patient', attributes: ['firstName', 'lastName'] },\r\n        { model: Service }\r\n      ]\r\n    });\r\n\r\n    const now = new Date();\r\n\r\n    for (const appointment of appointments) {\r\n      const appointmentDate = new Date(appointment.date);\r\n      let newStatus: AppointmentStatus | null = null;\r\n\r\n      if (appointmentDate < now && appointment.status !== 'finished') {\r\n        newStatus = 'finished';\r\n      } else if (\r\n        appointmentDate.toDateString() === now.toDateString() &&\r\n        appointment.status === 'pending'\r\n      ) {\r\n        newStatus = 'confirmed';\r\n      }\r\n\r\n      if (newStatus) {\r\n        appointment.status = newStatus;\r\n        await appointment.save();\r\n      }\r\n    }\r\n\r\n    return appointments;\r\n  }\r\n\r\n  async getAppointmentById(id: number, user: { id: number; role: string }) {\r\n    const appointment = await Appointment.findByPk(id, {\r\n      include: [\r\n        { model: User, as: 'doctor', attributes: ['firstName', 'lastName'] },\r\n        { model: User, as: 'patient', attributes: ['firstName', 'lastName'] },\r\n        { model: Service },\r\n      ],\r\n    });\r\n\r\n    if (!appointment) {\r\n      throw new Error('NotFound');\r\n    }\r\n\r\n    if (user.role === 'doctor' && appointment.doctorId !== user.id) {\r\n      throw new Error('Forbidden');\r\n    }\r\n    if (user.role === 'patient' && appointment.patientId !== user.id) {\r\n      throw new Error('Forbidden');\r\n    }\r\n\r\n    return appointment;\r\n  }\r\n\r\n  async getBookedTimes(doctorId: number, dateStr: string, serviceId?: number) {\r\n    const start = new Date(dateStr);\r\n    const end = new Date(dateStr);\r\n    end.setHours(23, 59, 59, 999);\r\n\r\n    const where: any = {\r\n      doctorId,\r\n      date: { [Op.between]: [start, end] },\r\n    };\r\n    if (serviceId) {\r\n      where.serviceId = serviceId;\r\n    }\r\n\r\n    const appointments = await Appointment.findAll({ where });\r\n\r\n    return appointments.map(a => new Date(a.date).toTimeString().slice(0, 5));\r\n  }\r\n\r\n  async deleteAppointment(id: number, user: { id: number; role: string }) {\r\n    const appointment = await Appointment.findByPk(id);\r\n\r\n    if (!appointment) {\r\n      throw new Error('NotFound');\r\n    }\r\n\r\n    if (\r\n      user.role !== 'admin' &&\r\n      appointment.patientId !== user.id &&\r\n      appointment.doctorId !== user.id\r\n    ) {\r\n      throw new Error('Forbidden');\r\n    }\r\n\r\n    await appointment.destroy();\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"a9df1c09-6808-5fdb-ba30-7ce4d626ed24"}