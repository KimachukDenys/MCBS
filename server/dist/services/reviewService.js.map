{"version":3,"file":"reviewService.js","sources":["services/reviewService.ts"],"sourceRoot":"/","sourcesContent":["import { Review, Appointment, User, Service } from '../models';\r\n\r\nexport class ReviewService {\r\n\r\n    async getUserReviews(userId: number) {\r\n    return Review.findAll({\r\n    where: { userId },\r\n      include: [\r\n        {\r\n          model: Appointment,\r\n          as: 'appointment', // використовуйте as, якщо ви вказали alias\r\n          include: [\r\n            { model: Service,},\r\n            { model: User, as: 'doctor', attributes: ['firstName', 'lastName']}\r\n          ]\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  async hasUserReviewedAppointment(appointmentId: number, userId: number): Promise<boolean> {\r\n    const review = await Review.findOne({\r\n      where: { appointmentId, userId },\r\n    });\r\n    return !!review;\r\n  }\r\n  async createReview(data: {\r\n    appointmentId: number;\r\n    userId: number;\r\n    rating: number;\r\n    comment: string;\r\n  }) {\r\n    const appointment = await Appointment.findByPk(data.appointmentId);\r\n    if (!appointment) throw new Error('NotFound:Appointment not found');\r\n\r\n    if (appointment.status !== 'finished') {\r\n      throw new Error('Validation:Ви можете залишати відгуки, якщо ваш запис завершився!');\r\n    }\r\n\r\n    const alreadyReviewed = await this.hasUserReviewedAppointment(data.appointmentId, data.userId);\r\n    if (alreadyReviewed) {\r\n      throw new Error('Validation:Ви вже залишили відгук на це бронювання!');\r\n    }\r\n\r\n    return await Review.create(data);\r\n  }\r\n\r\n\r\n\r\n  async updateReview(id: number, data: { rating?: number; comment?: string }) {\r\n    const review = await Review.findByPk(id);\r\n    if (!review) throw new Error('NotFound:Review not found');\r\n\r\n    review.rating = data.rating ?? review.rating;\r\n    review.comment = data.comment ?? review.comment;\r\n    return await review.save();\r\n  }\r\n\r\n  async deleteReview(id: number) {\r\n    const review = await Review.findByPk(id);\r\n    if (!review) throw new Error('NotFound:Review not found');\r\n    await review.destroy();\r\n  }\r\n\r\n  async getDoctorReviews(doctorId: number) {\r\n    return await Review.findAll({\r\n      include: [\r\n        {\r\n          model: Appointment,\r\n          as: 'appointment',\r\n          where: { doctorId },\r\n          attributes: ['serviceId'],\r\n          include: [{ model: Service, attributes: ['title'] }],\r\n        },\r\n        {\r\n          model: User,\r\n          as: 'author',\r\n          attributes: ['firstName', 'lastName'],\r\n        },\r\n      ],\r\n      order: [['createdAt', 'DESC']],\r\n    });\r\n  }\r\n\r\n  async getServiceReviews(serviceId: number) {\r\n    return await Review.findAll({\r\n      include: [\r\n        {\r\n          model: Appointment,\r\n          as: 'appointment',\r\n          where: { serviceId },\r\n          attributes: ['doctorId'],\r\n          include: [{ model: User, as: 'doctor', attributes: ['firstName', 'lastName'] }],\r\n        },\r\n        {\r\n          model: User,\r\n          as: 'author',\r\n          attributes: ['firstName', 'lastName'],\r\n        },\r\n      ],\r\n      order: [['createdAt', 'DESC']],\r\n    });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"48fad805-7d9e-5a78-8bb4-43594df18bda"}