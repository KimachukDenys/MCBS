{"version":3,"file":"serviceController.js","sources":["controllers/serviceController.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport { ServiceService } from '../services/serviceService';\r\nimport { uploadImage } from '../middlwares/upload';\r\n\r\nexport class ServiceController {\r\n  constructor(private serviceService: ServiceService) {}\r\n\r\n  createService = [\r\n    uploadImage,\r\n    async (req: Request, res: Response, next: NextFunction) => {\r\n      try {\r\n        const { title, description, price, categoryId } = req.body;\r\n        const imagePath = req.file ? `images/${req.file.filename}` : null;\r\n        const newService = await this.serviceService.createService({ title, description, price, categoryId, imagePath });\r\n        res.status(201).json(newService);\r\n      } catch (err) {\r\n        next(err);\r\n      }\r\n    }\r\n  ];\r\n\r\n  getAllServices = async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const includeHidden = req.query.includeHidden === 'true';\r\n      const services = await this.serviceService.getAllServices(includeHidden);\r\n      res.status(200).json(services);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  getServiceById = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n    const id = parseInt(req.params.id, 10);\r\n    if (isNaN(id)) {\r\n      res.status(400).json({ message: 'Invalid service id' });\r\n      return;\r\n    }\r\n    try {\r\n      const service = await this.serviceService.getServiceById(id);\r\n      if (!service) {\r\n        res.status(404).json({ message: 'Сервіс не знайдено' });\r\n        return;\r\n      }\r\n      res.json(service);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  getServicesForDoctor = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n    const doctorId = Number(req.params.id);\r\n    if (isNaN(doctorId)) {\r\n      res.status(400).json({ message: 'Invalid doctorId' });\r\n      return;\r\n    }\r\n    try {\r\n      const services = await this.serviceService.getServicesForDoctor(doctorId);\r\n      if (!services) {\r\n        res.status(404).json({ message: 'Doctor not found or has no services' });\r\n        return;\r\n      }\r\n      res.json(services);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  updateService = [\r\n    uploadImage,\r\n    async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n      const id = parseInt(req.params.id, 10);\r\n      if (isNaN(id)) {\r\n        res.status(400).json({ message: 'Invalid service id' });\r\n        return;\r\n      }\r\n\r\n      const { title, description, price, categoryId, isHidden } = req.body;\r\n      try {\r\n        const imagePath = req.file ? `images/${req.file.filename}` : undefined;\r\n\r\n        const updatedService = await this.serviceService.updateService(id, {\r\n          title,\r\n          description,\r\n          price,\r\n          categoryId,\r\n          isHidden,\r\n          imagePath,\r\n        });\r\n\r\n        if (!updatedService) {\r\n          res.status(404).json({ message: 'Сервіс не знайдено.' });\r\n          return;\r\n        }\r\n\r\n        res.json(updatedService);\r\n      } catch (err) {\r\n        next(err);\r\n      }\r\n    }\r\n  ];\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"77695bb0-e28a-5c4c-a9f0-8c4d133f6f9c"}