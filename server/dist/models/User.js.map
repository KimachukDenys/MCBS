{"version":3,"file":"User.js","sources":["models/User.ts"],"sourceRoot":"/","sourcesContent":["import { DataTypes, Model, Optional, BelongsToManyAddAssociationMixin, BelongsToManyGetAssociationsMixin } from 'sequelize';\r\nimport sequelize from '../config/database';\r\nimport Service from './Service';\r\n\r\nexport type UserRole = 'patient' | 'doctor' | 'admin';\r\nexport type Gender = 'male' | 'female' | 'other';\r\n\r\nexport interface UserAttributes {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  password: string;\r\n  role: UserRole;\r\n  gender?: Gender;\r\n  photoUrl?: string;\r\n}\r\n\r\ninterface UserCreationAttributes extends Optional<UserAttributes, 'id' | 'role' | 'gender' | 'photoUrl'> {}\r\n\r\nclass User extends Model<UserAttributes, UserCreationAttributes> implements UserAttributes {\r\n  public id!: number;\r\n  public firstName!: string;\r\n  public lastName!: string;\r\n  public email!: string;\r\n  public phone!: string;\r\n  public password!: string;\r\n  public role!: UserRole;\r\n  public gender?: Gender;\r\n  public photoUrl?: string;\r\n  public services?: Service[];\r\n\r\n  public addService!: BelongsToManyAddAssociationMixin<Service, number>;\r\n  public getServices!: BelongsToManyGetAssociationsMixin<Service>;\r\n\r\n  public readonly createdAt!: Date;\r\n  public readonly updatedAt!: Date;\r\n}\r\n\r\nUser.init(\r\n  {\r\n    id: {\r\n      type: DataTypes.INTEGER,\r\n      autoIncrement: true,\r\n      primaryKey: true,\r\n    },\r\n    firstName: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n    },\r\n    lastName: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n    },\r\n    email: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n      unique: true,\r\n    },\r\n    phone: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n      unique: true,\r\n    },\r\n    password: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false,\r\n    },\r\n    role: {\r\n      type: DataTypes.ENUM('patient', 'doctor', 'admin'),\r\n      defaultValue: 'patient',\r\n    },\r\n    gender: {\r\n      type: DataTypes.ENUM('male', 'female'),\r\n      allowNull: true,\r\n    },\r\n    photoUrl: {\r\n      type: DataTypes.STRING,\r\n      allowNull: true,\r\n    },\r\n  },\r\n  {\r\n    sequelize,\r\n    modelName: 'User',\r\n    tableName: 'users',\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nexport default User;\r\n"],"names":[],"mappings":";;;;;;;AAAA,yCAA4H;AAC5H,kEAA2C;AAoB3C,MAAM,IAAK,SAAQ,iBAA6C;CAiB/D;AAED,IAAI,CAAC,IAAI,CACP;IACE,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,aAAa,EAAE,IAAI;QACnB,UAAU,EAAE,IAAI;KACjB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACjB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE,IAAI;KACb;IACD,KAAK,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE,IAAI;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACjB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC;QAClD,YAAY,EAAE,SAAS;KACxB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;QACtC,SAAS,EAAE,IAAI;KAChB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,IAAI;KAChB;CACF,EACD;IACE,SAAS,EAAT,kBAAS;IACT,SAAS,EAAE,MAAM;IACjB,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,kBAAe,IAAI,CAAC","debug_id":"ed217fe5-e538-552b-adf9-d3d14540c572"}