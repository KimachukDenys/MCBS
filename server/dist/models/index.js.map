{"version":3,"file":"index.js","sources":["models/index.ts"],"sourceRoot":"/","sourcesContent":["import sequelize from '../config/database';\r\n\r\nimport User from './User';\r\nimport Service from './Service';\r\nimport Category from './Categories';\r\nimport Appointment from './Appointment';\r\nimport Review from './Review';\r\nimport DoctorProfile from './DoctorProfile'\r\nimport ServiceDoctor from './ServiceDoctor';\r\n\r\n// Асоціації\r\nUser.hasMany(Appointment, { foreignKey: 'patientId', as: 'appointments' });\r\nUser.hasMany(Appointment, { foreignKey: 'doctorId', as: 'appointmentsAsDoctor' });\r\n\r\nAppointment.belongsTo(User, { foreignKey: 'patientId', as: 'patient' });\r\nAppointment.belongsTo(User, { foreignKey: 'doctorId', as: 'doctor' });\r\nAppointment.belongsTo(Service, { foreignKey: 'serviceId' });\r\n\r\nAppointment.hasOne(Review, { foreignKey: 'appointmentId', as: 'review' });\r\nReview.belongsTo(Appointment, { foreignKey: 'appointmentId', as: 'appointment' });\r\n\r\nReview.belongsTo(User, { foreignKey: 'userId', as: 'author' });\r\nUser.hasMany(Review, { foreignKey: 'userId' });\r\n\r\nService.belongsTo(Category, { foreignKey: 'categoryId', as: 'category' });\r\nCategory.hasMany(Service, { foreignKey: 'categoryId', as: 'services' });\r\n\r\n\r\nUser.hasOne(DoctorProfile, { foreignKey: 'userId', as: 'profile' });\r\nDoctorProfile.belongsTo(User, { foreignKey: 'userId' });\r\n\r\n\r\nService.belongsToMany(User, {\r\n  through: ServiceDoctor,\r\n  foreignKey: 'serviceId',\r\n  otherKey: 'doctorId',\r\n  as: 'doctors',\r\n});\r\n\r\nUser.belongsToMany(Service, {\r\n  through: ServiceDoctor,\r\n  foreignKey: 'doctorId',\r\n  otherKey: 'serviceId',\r\n  as: 'services',\r\n});\r\n\r\nexport {\r\n  sequelize,\r\n  User,\r\n  Service,\r\n  Category,\r\n  Appointment,\r\n  Review,\r\n  DoctorProfile,\r\n  ServiceDoctor,\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AAAA,kEAA2C;AA+CzC,oBA/CK,kBAAS,CA+CL;AA7CX,kDAA0B;AA8CxB,eA9CK,cAAI,CA8CL;AA7CN,wDAAgC;AA8C9B,kBA9CK,iBAAO,CA8CL;AA7CT,8DAAoC;AA8ClC,mBA9CK,oBAAQ,CA8CL;AA7CV,gEAAwC;AA8CtC,sBA9CK,qBAAW,CA8CL;AA7Cb,sDAA8B;AA8C5B,iBA9CK,gBAAM,CA8CL;AA7CR,oEAA2C;AA8CzC,wBA9CK,uBAAa,CA8CL;AA7Cf,oEAA4C;AA8C1C,wBA9CK,uBAAa,CA8CL;AA5Cf,YAAY;AACZ,cAAI,CAAC,OAAO,CAAC,qBAAW,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC;AAC3E,cAAI,CAAC,OAAO,CAAC,qBAAW,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,EAAE,sBAAsB,EAAE,CAAC,CAAC;AAElF,qBAAW,CAAC,SAAS,CAAC,cAAI,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;AACxE,qBAAW,CAAC,SAAS,CAAC,cAAI,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;AACtE,qBAAW,CAAC,SAAS,CAAC,iBAAO,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;AAE5D,qBAAW,CAAC,MAAM,CAAC,gBAAM,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC1E,gBAAM,CAAC,SAAS,CAAC,qBAAW,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,CAAC;AAElF,gBAAM,CAAC,SAAS,CAAC,cAAI,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC/D,cAAI,CAAC,OAAO,CAAC,gBAAM,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;AAE/C,iBAAO,CAAC,SAAS,CAAC,oBAAQ,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1E,oBAAQ,CAAC,OAAO,CAAC,iBAAO,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;AAGxE,cAAI,CAAC,MAAM,CAAC,uBAAa,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;AACpE,uBAAa,CAAC,SAAS,CAAC,cAAI,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;AAGxD,iBAAO,CAAC,aAAa,CAAC,cAAI,EAAE;IAC1B,OAAO,EAAE,uBAAa;IACtB,UAAU,EAAE,WAAW;IACvB,QAAQ,EAAE,UAAU;IACpB,EAAE,EAAE,SAAS;CACd,CAAC,CAAC;AAEH,cAAI,CAAC,aAAa,CAAC,iBAAO,EAAE;IAC1B,OAAO,EAAE,uBAAa;IACtB,UAAU,EAAE,UAAU;IACtB,QAAQ,EAAE,WAAW;IACrB,EAAE,EAAE,UAAU;CACf,CAAC,CAAC","debug_id":"fcc1639e-6533-5ef3-b8b9-f34b31572c7d"}